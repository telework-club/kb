(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{692:function(t,a,r){"use strict";r.r(a);var s=r(28),v=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"异地技术团队高效协作的经验分享"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#异地技术团队高效协作的经验分享"}},[t._v("#")]),t._v(" 异地技术团队高效协作的经验分享")]),t._v(" "),r("copyright",{attrs:{meta:t.$frontmatter.meta}}),t._v(" "),r("h2",{attrs:{id:"背景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[t._v("#")]),t._v(" 背景")]),t._v(" "),r("p",[t._v("我所在的团队是一个互联网技术初创型小团队，团队目前 20 人左右。人员随机主要分布在杭州、深圳两地。一个这么小的团队还分两个地方主要原因是人才招聘。\n我们是一个新型、小众、初创的，但是又对技术成员要求有比较高的团队。这不是我们追求逼格，只是我们的业务涉及到智能硬件，一个解决方案后面涉及很多技术。所以我们对技术人员除了基础扎实要求外，还希望他有很强的学习能力，并且有很强的自主积极性。\n最开始的时候团队在广州，后来因为业务发展招人的问题在广州短期内无法解决。因此团队随后参考了互联网人才流动报告，选择在杭州开辟一个分公司，而深圳相比广州互联网人才也更有活力，因此随后将技术团队迁到深圳。\n在入驻两地后人才招聘上得到了解决，也意外得到了其他的一些好处：")]),t._v(" "),r("ul",[r("li",[t._v("刚好我们目前的主要业务分布在珠三角和长三角（明年就要走向世界了），在杭州、深圳两地都有技术团队对于技术支持方便了不少。")]),t._v(" "),r("li",[t._v("我们和大疆是合作伙伴，经常需要一起调试未发布的硬件和 SDK。需要不少沟通，在深圳有技术团队后某种程度上优化了和大疆的沟通效率。")])]),t._v(" "),r("h2",{attrs:{id:"文档多了，要问的就少了"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#文档多了，要问的就少了"}},[t._v("#")]),t._v(" 文档多了，要问的就少了")]),t._v(" "),r("p",[r("strong",[t._v("文档多了，很多事情的来龙去脉就能查到，就不需要来一个人问一次，解释一次。提问的人可能是身边的同事，也可能是产品，也可能是市场运营。一开始就把文档写好，以后有这个问题的人都看这份文档就很清晰了，也节约了解释的时间。")])]),t._v(" "),r("blockquote",[r("p",[t._v("假设一个模块是 A 写的，最清楚这个模块的人肯定是 A 了。现在假设 A 把这个模块交接给了 B，A 选择传统的口炮交接方式，想到哪说到哪。B 选择传统的看到哪想到哪交接方式，既然你这么说那就是这样了。然后自己看看模块，如果刚好有疑问就问，要是没有就这么过了。毕竟不可能两个人坐在一起结对一行行看，一行行提问。那么当 A 交接给 B 的时候，信息肯定是损失了一部分了。这个时候如果这个模块交接 C，或者 D 来问 B 模块的问题。这中间都有信息的缺失和额外的时间投入。\n还有时间遗忘曲线，项目越久，关于这个项目中的一些实现细节就会遗忘的越多。这就是一个团队里需要沟通的一大部分内容：我靠，这是什么，这个为什么是这样，当时你为什么这么做。得到的是低效的、不准确的答复，也有很大的概率就是你自己看看吧。一顿操作后，还是一无所知。")])]),t._v(" "),r("p",[r("strong",[t._v("文档可以是什么？")]),t._v(" 可以是一个需求提出背景；可以是需求的原型图、交互图；可以是一个模块的职责，实现方式；某个技术选型的背景；某个技术在项目中的应用场景和使用方式；可以是一个控件的设计思路。在完成了一个阶段的工作后，都应该考虑输出文档。这不是一个附加的工作，而是完成这份工作中要求的重要一环。当你封装完一个模块，要在写完对应的文档后才算是完成。")]),t._v(" "),r("blockquote",[r("p",[t._v("当你提出一个 bug，写下这个 bug 产生的步骤原因，这才是完成的提出了一个 bug。那么这个 bug 不处理，也需要解释什么原因放在这里。让这些已经发生过，未来还有人关心的事情有线索可查。")])]),t._v(" "),r("p",[r("strong",[t._v("鼓励写文档的一个有效方式是在工作中就把写文档的时间算进去。")]),t._v(" 很多团队中这个功能开发时间两天，两天后完成了接着做下一个功能，哪来的心思时间写文档？如果安排了时间，在完成功能后自己记忆最清晰的时候把文档写出来。自己也可以在写文档过程中进行一个总结，对团队、对个人都是一个有益的安排")]),t._v(" "),r("h2",{attrs:{id:"办公场景下的高效im：slack"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#办公场景下的高效im：slack"}},[t._v("#")]),t._v(" 办公场景下的高效IM：Slack")]),t._v(" "),r("p",[t._v("君欲善其事必先利其器，既然需要在网上沟通，大部分的文字沟通都是在 IM 上，一个正确的 IM 工具就显得很重要了。唯一的正确的选择就是 Slack。\n微信还是算了，首先聊天记录的限制就是一个大软肋。一个新人加入后怎么看以前的聊天记录？\n其次就是微信人一多就没法做管理了。一个群里二十个人，有两三个人针对一个问题讨论起来，其他不相关的人信息流就被干扰了。如果按照项目分群的话，一个公司就会有太多的群。\n还有一个重要的地方就是工作是工作，生活是生活。我们大部分在微信上进行着私人社交。平时聊聊天玩玩还好，在微信上有太多工作之外的事务。\n更核心的原因是微信本来就不是针对办公场景设计的。所以还是要选择针对办公场景的 IM。\nSlack 付费后有一个屏幕共享的功能很好用，远程过文档的时候很方便。QQ 视频共享的刷新率太低。Slack 唯一的缺点似乎就是网络的问题了，需要全员有一个稳定的科学上网工具。")]),t._v(" "),r("h2",{attrs:{id:"定期见面建立信任，提高沟通积极性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#定期见面建立信任，提高沟通积极性"}},[t._v("#")]),t._v(" 定期见面建立信任，提高沟通积极性")]),t._v(" "),r("p",[t._v("人群的性格自然就有内向和外向。我们也常常会看到一个人和你不熟悉的时候很腼腆，熟悉了之后交流就变得积极了起来。这是一个常见的情况。在身边也常常会有刚入职的同事和其他同事不够熟悉，很多疑问羞于开口主动沟通，按照自己的猜测执行。最后发现理解错了返工造成的时间浪费。\n远程协作上这个问题就更明显了。想象你突然被拉到一个群里，群里十几个人都是网友，里面大家都沟通的很欢。你不知道他们在聊什么，也不知道他们都是什么岗位的人。这个时候你有疑问，在这一群“网友”里，你不清楚要找谁，对方的友善度也很难猜测。自己是个新人还是少打扰别人，不要给别人一种事很多的印象。\n人的感情真的很微妙，要是在同一个空间共事过，熟悉了之后信任就会显著增加。在一个办公室里，只是时间长短的问题，慢一点的一个月也会熟悉了。但是两地的人就没办法了，所以一定要安排定期见面交流。\n目前我们这里大概就是一个季度的里会有一次一周的出差。在一个任务需要紧密协作的时候会安排在一起开发，除了增加熟悉外也可以在一个任务里通过协作增加凝聚力。团建也最好安排所有人一起。\n在大家都熟悉之后，也就能够更加大胆积极的进行沟通了。")]),t._v(" "),r("h2",{attrs:{id:"总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),r("p",[t._v("距离一定会带来沟通效率的下降。这是一个自然的结果。有问题就应该考虑去解决、去优化，问题不会自己消失。我们不应该回避、无视这个问题，而应该积极的思考应对如何提高异地团队的沟通协作效率。不要假设对方都懂了，和项目执行过程中的“信任但核实”异曲同工。")])],1)}),[],!1,null,null,null);a.default=v.exports}}]);